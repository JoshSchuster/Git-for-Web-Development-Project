https://codepen.io/joshschuster/pen/dyMJJBL

1. What is Semantic HTML? 
Semantic HTML describes tags with meaning. Some examples of semantic tags include: 
<h1>
<p>
<section>
<nav>
<header>
<footer>
Some non-semantic tags are:
<div>
<span>
Semantic HTML gives clarity and meaning to developers. Also, search engine algorithms optimize based on meaning. Search engine optimization correlates to the use of semantic HTML. 

2. What is HTML used for? 
HTML is used to display data in a graphical form (rather than execute tasks). It is read by the browser and then used as a blueprint for displaying information on your screen. 

3. What is an attribute and where do we put it?
An attribute is a flag inside of a tag used when we need to include information that we don't want to render on the page (like the link to an image). An example of an attribute is "href". 

4. What is the h1 tag used for? How many times should I use it on a page?
h1 is a heading tag that is used as a way to present the subject matter of the page. 1 is the most important and 6 is the least important. By default, 1 will be the largest, 2 will be the 
next largest, and etc. You should only use one <h1> per page. Using more than one will not result in an error, but using only one is seen as a best practice. It makes logical sense — 
<h1> is the most important heading, and tells you what the purpose of the overall page is. You wouldn't have a book with more than one title, or a movie with more than one name! Having a 
single top-level title is also arguably better for screen reader users, and SEO.

5. Name two tags that have required attributes
<a> tag will always be used with the href attribute to tell the browser what address you want the link to point to. 
<img> tag will always be used with the src attribute which points to the address of the image to be displayed. 

6. What do we put in the head of our HTML document? 
The <title> element. It defines a title in the browser toolbar, provides a title for the page when it is added to favorites, and displays a title for the page in search engine-results. 

7. What is an id? 
Ids are titles that can only appear on a single element. Think of it as you would your driver's license number. ONLY you have that one number. Id selectors will always begin with #. 

8. What elements can I add an id to? 
You can add an id to any element. 

9. How many times can I use the same id on a page? 
You can only use an id once on a single element. 

10. What is a class? 
Class is a selector that can apply to multiple elements. Think of it like a classroom. Usually, you aren't the only person in a class, although you might be. The class is big enough for lots of 
people. Class slectors always begin with . 

11. What elements can I add a class to? 
The class attribute can be used on any element. 

12. How many times can I use the same class on a page? 
As many times as you want. Multiple elements can share the same class. 

13. How do I get my link to open in a new tab?
You would add the target="_blank" in the anchor tag. Example: <a target="blank" href="https://lambdaschool.com/">

14. What is the alt attribute in the image tag used for? 
It specifies an alternate text for the image, if the image for some reason cannot be displayed. 

15. How do I reference an id?
You reference an id with the #. 

16. What is the difference between a section and a div
<section> is a semantic tag. <div> is non-semantic. <div>s do not convey meaning. They are used to achieve something the designer or client wanted but perhaps doesn't contian meaning. 

17. What is CSS used for? 
CSS allows us to add style and layout to our web pages. 

18. How to we select an element? Example - every h2 on the page
We select elements with the element name and brackets {}. For example h2{}. 

19. What is the difference between a class and an id? - Give me an example of when I might use each one
Id applies to one element while class applies to multiple elements. An example could be headings on a page. Lets say we have 5 headings. One of the headings needs to be styled one way and the 
other 4 headings need to be styled another way. We would use the id slector for the 1 heading and the class selector for the other 4. 

20. How do we select classes in CSS?
We select classes in CSS with . For example: HTML: <div class=classExample> , CSS: .classExample{} 

21. How do we select a p element with a single class of “human””?
.human p{}

22. What is a parent child selector? When would this be useful? 
The parent child selector (>) selects all elements that are a direct child of the specified element. Lets say you wanted to make all of the <p> elements in a section of your page green. 
You would nest those elements inside of <body>nest me here</body>. Then in CSS: body > p {color: green;} this will make any paragraph which is a direct child of body (nested inside of body) green. 

23. How do you select all links within a div with the class of sidebar?
.sidebar div{} 

24. What is a pseudo selector?
A pseudo-class is a selector that selects elements that are in a specific state, e.g. they are the first element of their type, or they are being hovered over by the mouse pointer. They tend 
to act as if you had applied a class to some part of your document, often helping you cut down on excess classes in your markup, and giving you more flexible, maintainable code. Psuedo-classes
are keywords that start with a colon: For example - :pseudo-class-name

25. What do we use the change the spacing between lines?
The line-height property 

26. What do we use to change the spacing between letters?
The letter-spacing property 

27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?
The text-transform property. For example - text-transform: uppercase; text-transform: lowercase; text-transform: capitalize;

28. How do I add a 1px border around my div that is dotted and black?
By using the border property. 
div{
    border: 1px dotted black;
}

29. How do I select everything on the page? 
By using the universal selector * For example:
/* Sets the background-color over everything on the page to yellow */
*{
    background-color: yellow; 
}

30. How do I write a comment in CSS?
You write the comments in between /* and */. For example: /* These are my comments */

31. How do I find out what file I am in, when I am using the command line? 
You use the pwd (print working directory) command which displays the path of the current working diredtory. 

32. Using the command line - how do I see a list of files/folders in my current folder?
You use the ls (list) command which lists the directory content. 

33. How do I remove a file via the command line? Why do I have to be careful with this? 
Use the command rm (remove) or rm -f (force remove). You need to be careful with this because there is no recovery option. This command does not move the file to the trash bin (like a GUI delete
would do). 

34. Why should I use version control? 
The content which is stored in Git keeps changing as more content is added. Also, many developers can add content in parallel. So having a Version Control System helps handle this by maintaining
a history of what changes have happened.

35. How often should I commit to github?
You need to commit often and use meaningful commit messages. In order to go back and look at an old version of your code, you’ll need to know which specific commit you want to look at. Each 
commit should be focused on a single point of change. A single commit that is focused on a single change is much easier to review, discuss, and troubleshoot. If your commit contains a large 
number of unrelated changes it becomes more complicated to utilize. So what is "a single point of change"? The rule of thumb is that the change is directly related to a single problem, you are 
actively working on it and it is tied to the amount of information you can hold in your head at one time. When in doubt, its better to have more commits than fewer.

36. What is the command we would use to push our repo up to github? 
git push 

37. Walk me through Lambda's git flow.
fork repo -> clone it to your local machine -> work on the project -> create a pull request for submission 
more detialed git flow: fork repo -> clone it to your local machine -> branch your local copy to make changes -> commit those changes regularily -> create a pull request for submission
visualization: https://lambdaschool.enterprise.slack.com/files/W019LUKEYGZ/F019N9RBNTH/git_visual.pdf

Stretch Questions

1. What is the difference between an inline element and a block element?
2. What happens when an element is positioned absolutely? 
3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width? 
4. Name 3 elements that are diplay block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default
5. In your own words, explain the box model. What is the "fix" for the box model, in other words, how do we make all elements respect the width we've given them?